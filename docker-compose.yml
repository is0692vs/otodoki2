services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ORIGINS=http://localhost:3000
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./backend/app:/app/app
    depends_on:
      db:
        condition: service_started

  web:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=1
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data: