{
  "name": "otodoki2 Dev Environment",
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu-24.04",
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.flake8",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-azuretools.vscode-docker",
        "bradlc.vscode-tailwindcss",
        "ms-vscode.vscode-json",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "GitHub.vscode-pull-request-github",
        "ms-python.vscode-python-envs",
        "ms-python.debugpy",
        "ms-python.vscode-pylance",
        "GitHub.codespaces",
        "GitHub.remotehub",
        "ms-vscode.remote-server",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "saoudrizwan.claude-dev",
        "openai.chatgpt",
        "google.gemini-cli-vscode-ide-companion",
        "google.geminicodeassist",
        "mhutchie.git-graph",
        "donjayamanne.githistory",
        "github.vscode-github-actions",
        "eamodio.gitlens",
        "kilocode.kilo-code",
        "yzhang.markdown-all-in-one",
        "marp-team.marp-vscode",
        "donjayamanne.python-extension-pack"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "editor.formatOnSave": true,
        "files.autoSave": "afterDelay"
      }
    }
  },
  "forwardPorts": [3000, 8000],
  "postCreateCommand": "cd frontend && npm install && cd ../backend && pip install -r requirements.txt",
  "remoteUser": "vscode",
  "workspaceFolder": "/workspaces/otodoki2web",
  "remoteEnv": {
    "GEMINI_API_KEY": "${localEnv:GEMINI_API_KEY}"
  }
}
